subprojects {
    project ->
        apply plugin: "org.springframework.boot"
        apply plugin: "docker"

        dependencies {
            compile group: 'io.springfox', name: 'springfox-swagger2', version: swagger
            compile group: 'io.springfox', name: 'springfox-swagger-ui', version: swagger
            compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
            compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client'
            compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-config'
            compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
            compile "org.springframework.boot:spring-boot-starter-aop"
            compile "org.springframework.retry:spring-retry:$springRetry"
        }

        def application = System.getenv("DOCKER_REPO") ? "${System.getenv("DOCKER_REPO")}/${project.name}": "${project.name}"
        def unified = System.getenv("DOCKER_REGISTRY") ? "${System.getenv("DOCKER_REGISTRY")}/${application}": "${application}"
        task buildDocker(type: Docker) {
            tag = "${unified}"
            if (file("deployment/Dockerfile").exists()) {
                dockerfile = "./deployment/Dockerfile"
            } else {
                baseImage = "openjdk:8-jdk-alpine"
                addFile {
                    from bootJar
                    rename { 'app.jar' }
                }
                entryPoint(['java', '-jar', '/app.jar'])
            }

            doFirst {
                copy {
                    from jar
                    into stageDir
                }
                copy {
                    from file("nodejs/")
                    into file("build/docker/nodejs")
                }
            }
        }

        buildDocker.dependsOn(build)
}
